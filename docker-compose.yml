services:
  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    image: rachidchaibugr/api-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: rachidchaibugr/frontend
    ports:
      - "3000:80"
    depends_on:
      - api-gateway

  playstation-scraper:
    build:
      context: ./PlaystationScraper
      dockerfile: Dockerfile
    image: rachidchaibugr/playstation-scraper
    ports:
      - "8081:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  xbox-scraper:
    build:
      context: ./XboxScraper
      dockerfile: Dockerfile
    image: rachidchaibugr/xbox-scraper
    ports:
      - "8082:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  steam-api:
    build:
      context: ./SteamAPI
      dockerfile: Dockerfile
    image: rachidchaibugr/steam-api
    ports:
      - "8083:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  user-manager:
    build:
      context: ./UserManager
      dockerfile: Dockerfile
    image: rachidchaibugr/user-manager
    ports:
      - "8084:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  redis:
    image: redis:7.2-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  config-server:
    build:
      context: ./ConfigServer
      dockerfile: Dockerfile
    image: rachidchaibugr/config-server
    ports:
      - "8088:8088"
    depends_on:
      eureka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s http://localhost:8088/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 15

  eureka:
    build:
      context: ./Eureka
      dockerfile: Dockerfile
    image: rachidchaibugr/eureka
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s http://localhost:8761/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 15

  unificador:
    build:
      context: ./Unificador
      dockerfile: Dockerfile
    image: rachidchaibugr/unificador
    ports:
      - "8085:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

volumes:
  redis_data: