services:
  api-gateway:
    build:
      context: ./ApiGateway
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:api-gateway
    ports:
      - "8080:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:frontend
    ports:
      - "80:80"
    depends_on:
      - api-gateway
      - playstation-scraper
      - xbox-scraper
      - steam-api
      - unificador

  playstation-scraper:
    build:
      context: ./PlaystationScraper
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:playstation-scraper
    ports:
      - "8081:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
   

  xbox-scraper:
    build:
      context: ./XboxScraper
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:xbox-scraper
    ports:
      - "8082:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
    

  steam-api:
    build:
      context: ./SteamAPI
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:steam-api
    ports:
      - "8083:8080"
    environment:
      - STEAM_API_KEY=${STEAM_API_KEY}
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
 

  redis:
    image: redis:8.0.1-alpine
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    entrypoint: ["/init/redis-init.sh"]
    environment:
      - REDIS_REPLICATION_MODE=master
    volumes:
      - redis_data:/data
      - ./redis-init.sh:/init/redis-init.sh:ro

  config-server:
    build:
      context: ./ConfigServer
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:config-server
    ports:
      - "8088:8088"
    depends_on:
      eureka:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s http://localhost:8088/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 15

  eureka:
    build:
      context: ./Eureka
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:eureka
    ports:
      - "8761:8761"
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -s http://localhost:8761/actuator/health | grep '\"status\":\"UP\"'"]
      interval: 10s
      timeout: 5s
      retries: 15

  unificador:
    build:
      context: ./Unificador
      dockerfile: Dockerfile
    image: rachidchaibali/crosscompare:unificador
    ports:
      - "8085:8080"
    depends_on:
      eureka:
        condition: service_healthy
      config-server:
        condition: service_healthy
  

  unificador-db:
    image: mariadb:11.7.2
    container_name: unificador-db
    restart: unless-stopped
    env_file:
      - ./unificador-db-secrets.env
    ports:
      - "3306:3306"
    volumes:
      - unificador_db_data:/var/lib/mysql
      - ./db-unificador-init.sql:/docker-entrypoint-initdb.d/db-unificador-init.sql:ro
   

  # phpmyadmin:
  #   image: phpmyadmin:5.2.1
  #   container_name: phpmyadmin
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #   environment:
  #     - PMA_HOST=unificador-db
  #     - PMA_PORT=3306
  #   depends_on:
  #     - unificador-db

volumes:
  redis_data:
  unificador_db_data: